go mod init <add your name space>
creates a new module, initializing the go.mod file that describes it. 

go build, go test 
and other package-building commands add new dependencies to go.mod as needed. 

cat go.mod 
shows the contents of go.mod file

go list -m all 
prints the current moduleâ€™s dependencies. 

direct
indirect
go list -m -versions <package name>
lists all of the versions of a package

go get <package name>
changes the required version of a dependency (or adds a new dependency).
example: go get rsc.io/sampler@v1.3.1
defaults to @latest

go mod tidy 
removes unused dependencies.
adds dependencies for other platforms
go doc <package name>
shows us the documentation of a package.
example: go doc fmt

tags
create a tag 		
git tag <tag name>
